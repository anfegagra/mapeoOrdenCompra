import { InvoiceLine } from './invoice-line-model';
import { Despatch } from './despatch-model';
import { GoodsItemContainer } from './goods-item-container-model';
import { DocumentReference } from './document-reference-model';
import { Dimension } from './dimension-model';
import { Delivery } from './delivery-model';
import { Address } from './address-model';
import { AllowanceCharge } from './allowance-charge-model';
import { Item } from './item-model';
import { Temperature } from './temperature-model';
import { Pickup } from './pickup-model';
import { Package } from './package-model';

export class GoodsItem {
    iD: string;
    sequenceNumberID: string;
    description: string;
    hazardousRiskIndicator: Indicator;
    declaredCustomsValueAmount: number;
    declaredForCarriageValueAmount: number;
    declaredStatisticsValueAmount: number;
    freeOnBoardValueAmount: number;
    insuranceValueAmount: number;
    valueAmount: number;
    grossWeightMeasure: Measure;
    netWeightMeasure: Measure;
    netNetWeightMeasure: Measure;
    chargeableWeightMeasure: Measure;
    grossVolumeMeasure: Measure;
    netVolumeMeasure: Measure;
    quantity: number;
    preferenceCriterionCode: number;
    requiredCustomsID: string;
    customsStatusCode: number;
    customsTariffQuantity: number;
    customsImportClassifiedIndicator: Indicator;
    chargeableQuantity: number;
    returnableQuantity: number;
    traceID: string;
    item: Item;
    goodsItemContainer: GoodsItemContainer;
    freightAllowanceCharge: AllowanceCharge;
    invoiceLine: InvoiceLine;
    temperature: Temperature;
    containedGoodsItem: GoodsItem;
    originAddress: Address;
    delivery: Delivery;
    pickup: Pickup;
    despatch: Despatch;
    measurementDimension: Dimension;
    containingPackage: Package;
    shipmentDocumentReference: DocumentReference;
    minimumTemperature: Temperature;
    maximumTemperature: Temperature;
}